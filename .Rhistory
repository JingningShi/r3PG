Temperature <- 25
calc_modifier_co2(alpha = alpha, CO2 = CO2, Temperature = Temperature)
calc_modifier_co2(alpha = alpha, CO2 = CO2, Temperature = c(0:40))
A1 <- (a * alpha * I[1] * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature)))))
A2 <- (a * alpha * I[2] * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature)))))
effective_LUE <- abs(A2-A1)
effective_LUE
calc_modifier_co2 <- function(alpha, CO2, Temperature){
a <- 0.8 # PAR absorbance
alpha <- alpha # intrinsic quantum yield
CiCa <- 0.8
CO2 <- ppm_Pa(CO2)
P_i <- CO2 * CiCa
Q10 <- 0.57
s25 <- 2600
pO2 <- 21000
s <- function(x){s25 * Q10 ^ ((x - 25)/ 10)}
I <- c(250:251) # incident PAR
#A <- a * alpha * I * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature))))
A1 <- (a * alpha * I[1] * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature)))))
A2 <- (a * alpha * I[2] * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature)))))
effective_LUE <- abs(A2-A1)
return(effective_LUE)
}
calc_modifier_co2(alpha = alpha, CO2 = CO2, Temperature = c(0:40))
e_alpha <- calc_modifier_co2(alpha = alpha, CO2 = CO2, Temperature = c(0:40))
plot(e_alpha ~ c(0:40))
library(devtools)
install_github(repo = "griffithdan/r3PG")
library(r3PG)
calc_modifier_co2(alpha = 0.085, CO2 = 400, Temperature = c(0:45))
back_shade <- matrix(data = NA, nrow = 1000, ncol = 1000)
back_shade
seq(from = 0, to = 45, length.out = 1000)
CO2 <- c(0:800)
calc_modifier_co2(alpha = 0.085, CO2 = CO2, Temperature = 0)
range_alpha <- calc_modifier_co2(alpha = 0.085, CO2 = CO2, Temperature = 0)
range(range_alpha)
CO2 <- seq(from = 0, to = 800, length.out = 2000)
back_shade <- matrix(data = NA, nrow = 0, ncol = 1000)
back_shade
for(i in CO2){
back_shade <- rbind(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
plot(back_shade)
str(back_shade)
heatmpa(back_shade)
heatmap(back_shade)
image(back_shade)
head(back_shade)
head(back_shade[2,])
row.names(back_shade)
row.names(back_shade) <- CO2
row.names(back_shade)
rep(CO2, times = 1000)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade)
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
hist(dat$eff_a)
unique(dat$eff_a)
dat$eff_a <- round(dat$eff_a, 10)
unique(dat$eff_a)
dat$eff_a <- round(dat$eff_a, 5)
unique(dat$eff_a)
dat$eff_a <- round(dat$eff_a, 4)
unique(dat$eff_a)
library(reshape2)
cast(data = dat, formula = eff_a ~ Temperature)
dcast(data = dat, formula = eff_a ~ Temperature)
test <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2")
View(test)
test <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
image(test)
test <- matrix(dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean))
image(test)
str(test)
test <- as.matrix(dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean))
image(test)
str(test)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
View(dat)
test <- as.matrix(dat)
dat <- as.matrix(dat)
dat <- dat[length(dat):1,]
dat <- dat[nrow(dat):1,]
image(dat)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
image(x = dat$Temperature, y = dat$eff_a, z = dat$CO2)
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
dat <- as.matrix(dat)
dat <- dat[nrow(dat):1,]
str(dat)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
row.names(dat) <- dat$eff_a
dat$eff_a <- NULL
dat <- as.matrix(dat)
dat <- dat[nrow(dat):1,]
str(dat)
as.numeric(colnames(dat))
row.names(dat)
image(x = as.numeric(colnames(dat)), y = as.numeric(row.names(dat)), z = dat)
image(x = as.numeric(colnames(dat)), y = 1:nrow(dat), z = dat)
dat
image(x = as.numeric(colnames(dat)), y = rev(as.numeric(row.names(dat))), z = dat)
rev(as.numeric(row.names(dat)))
length(rev(as.numeric(row.names(dat)))) * length(as.numeric(colnames(dat)))
image(x = as.numeric(colnames(dat))[-1], y = rev(as.numeric(row.names(dat)))[-1], z = dat)
image(dat)
image(t(dat))
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
row.names(dat) <- dat$eff_a
dat$eff_a <- NULL
dat <- as.matrix(dat)
#dat <- dat[nrow(dat):1,]
image(t(dat))
image(dat)
image(t(dat))
par(mfrow = c(1,3))
image(dat)
image(t(dat))
image(dat[nrow(dat):1,])
tdat <- t(dat)
par(mfrow = c(2,3))
image(dat)
tdat <- t(dat)
image(tdat)
image(dat[nrow(dat):1,])
image(tdat[nrow(tdat):1,])
image(dat[,ncol(dat):1])
dat <- dat[,ncol(dat):1]
image(dat)
image(dat)
colnames(dat)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
row.names(dat) <- dat$eff_a
dat$eff_a <- NULL
dat <- as.matrix(dat)
str(dat)
head(dat)
head(dat[1:10, 1:10])
format(1e-04, scientific = F)
format(dat[,1], scientific = F)
format(row.names(dat), scientific = F)
library(raster)
raster(dat)
plot(dat)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
row.names(dat) <- dat$eff_a
dat$eff_a <- NULL
dat <- as.matrix(dat)
raster(dat)
plot(dat)
plot(dat)
dat
View(dat)
image(dat)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
row.names(dat) <- dat$eff_a
dat$eff_a <- NULL
dat <- as.matrix(dat)
dat_rst <- raster(dat)
image(dat_rst)
plot(dat_rst)
back_shade <- c()
CO2 <- seq(from = 0, to = 800, length.out = 2000)
for(i in CO2){
back_shade <- c(back_shade, calc_modifier_co2(alpha = 0.085, CO2 = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
dat <- data.frame(CO2 = rep(CO2, times = 1000), eff_a = back_shade, Temperature = rep(seq(from = 0, to = 45, length.out = 1000), each = 2000))
head(dat)
dat$eff_a <- round(dat$eff_a, 4)
#dat <- dcast(data = dat, formula = eff_a ~ Temperature, value.var = "CO2", fun.aggregate = mean)
dat <- dcast(data = dat, formula = Temperature ~ eff_a, value.var = "CO2", fun.aggregate = mean)
str(dat)
row.names(dat) <- dat$Temperature
dat$Temperature <- NULL
dat <- as.matrix(dat)
dat_rst <- raster(dat)
plot(dat_rst)
plot(NULL, xlim = c(0,45), ylim = c(0, 0.085))
lines(calc_modifier_co2(alpha = 0.085, CO2 = 400, Temperature = seq(from = 0, to = 45, length.out = 1000)) ~ seq(from = 0, to = 45, length.out = 1000))
lines(calc_modifier_co2(alpha = 0.085, CO2 = 300, Temperature = seq(from = 0, to = 45, length.out = 1000)) ~ seq(from = 0, to = 45, length.out = 1000))
plot(NULL, xlim = c(0,45), ylim = c(0, 0.085))
lines(col = "green", calc_modifier_co2(alpha = 0.085, CO2 = 200, Temperature = seq(from = 0, to = 45, length.out = 1000)) ~ seq(from = 0, to = 45, length.out = 1000))
lines(col = "blue", calc_modifier_co2(alpha = 0.085, CO2 = 300, Temperature = seq(from = 0, to = 45, length.out = 1000)) ~ seq(from = 0, to = 45, length.out = 1000))
lines(col = "red", calc_modifier_co2(alpha = 0.085, CO2 = 400, Temperature = seq(from = 0, to = 45, length.out = 1000)) ~ seq(from = 0, to = 45, length.out = 1000))
lines(col = "purple", calc_modifier_co2(alpha = 0.085, CO2 = 700, Temperature = seq(from = 0, to = 45, length.out = 1000)) ~ seq(from = 0, to = 45, length.out = 1000))
5 * (3 - 2)
15 - 10
effective_LUE / (a * alpha)
A <- pO2 / (2 * s(Temperature))
pO2 / (2 * s(Temperature))
B <- 2 * pO2 / (2 * s(Temperature))
A
B
effective_LUE / (a * alpha)
LE <- effective_LUE / (a * alpha)
CO2 = (-B * LE - A) / (LE - 1)
CO2
Pa_ppm(CO2)
back_calc_co2 <- function(effective_LUE, Temperature){
a <- 0.8 # PAR absorbance
alpha <- 0.085 # intrinsic quantum yield
CiCa <- 0.8
Q10 <- 0.57
s25 <- 2600
pO2 <- 21000
s <- function(x){s25 * Q10 ^ ((x - 25)/ 10)}
I <- c(250:251) # incident PAR
LE <- effective_LUE / (a * alpha)
A <- pO2 / (2 * s(Temperature))
B <- 2 * pO2 / (2 * s(Temperature))
#x * LE + B * LE + A = x
CO2 = (-B * LE - A) / (LE - 1)
CO2 <- Pa_ppm(CO2)/CiCa
#A <- a * alpha * I * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature))))
#effective_LUE = (a * alpha * I[2] * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature))))) - (a * alpha * I[1] * ((P_i - pO2 / (2 * s(Temperature))) / (P_i + 2 * pO2 / (2 * s(Temperature)))))
return(CO2)
}
back_shade <- c()
eff_lues <- seq(from = 0, to = 0.085, length.out = 1000)
back_shade <- matrix(NA, nrow = 0, ncol = 1000)
back_shade <- matrix(NA, nrow = 0, ncol = 1000)
eff_lues <- seq(from = 0, to = 0.085, length.out = 1000)
back_calc_co2(effective_LUE = i, Temperature = seq(from = 0, to = 45, length.out = 1000))
for(i in eff_lues){
back_shade <- rbind(back_shade, back_calc_co2(effective_LUE = i, Temperature = seq(from = 0, to = 45, length.out = 1000)))
}
image(back_shade)
image(raster(back_shade))
back_shade
raster(back_shade)
back_rst <- raster(back_shade)
back_rst[back_rst > 800] <- NA
back_rst[back_rst < 280] <- NA
image(raster(back_shade))
image(back_rst)
back_shade <- back_shade[nrow(back_shade):1,]
back_rst <- raster(back_shade)
back_rst[back_rst > 800] <- NA
back_rst[back_rst < 280] <- NA
image(back_rst)
image(back_rst, asp = 1)
box()
plot(back_rst, asp = 1)
tmps <- seq(from = 0, to = 45, length.out = 100)
lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 200, Temperature = tmps) ~ tmps)
back_rst <- raster(back_shade, xmn = 0, xmx = 45, ymn = min(eff_lues), ymx = max(eff_lues))
back_rst[back_rst > 800] <- NA
back_rst[back_rst < 280] <- NA
plot(back_rst, asp = 1)
back_rst
plot(back_rst)
image(back_rst)
plot(back_rst)
image.scale <- function(z, zlim, col = heat.colors(12),
breaks, horiz=TRUE, ylim=NULL, xlim=NULL, ...){
if(!missing(breaks)){
if(length(breaks) != (length(col)+1)){stop("must have one more break than colour")}
}
if(missing(breaks) & !missing(zlim)){
breaks <- seq(zlim[1], zlim[2], length.out=(length(col)+1))
}
if(missing(breaks) & missing(zlim)){
zlim <- range(z, na.rm=TRUE)
zlim[2] <- zlim[2]+c(zlim[2]-zlim[1])*(1E-3)#adds a bit to the range in both directions
zlim[1] <- zlim[1]-c(zlim[2]-zlim[1])*(1E-3)
breaks <- seq(zlim[1], zlim[2], length.out=(length(col)+1))
}
poly <- vector(mode="list", length(col))
for(i in seq(poly)){
poly[[i]] <- c(breaks[i], breaks[i+1], breaks[i+1], breaks[i])
}
xaxt <- ifelse(horiz, "s", "n")
yaxt <- ifelse(horiz, "n", "s")
if(horiz){YLIM<-c(0,1); XLIM<-range(breaks)}
if(!horiz){YLIM<-range(breaks); XLIM<-c(0,1)}
if(missing(xlim)) xlim=XLIM
if(missing(ylim)) ylim=YLIM
plot(1,1,t="n",ylim=ylim, xlim=xlim, xaxt=xaxt, yaxt=yaxt, xaxs="i", yaxs="i", ...)
for(i in seq(poly)){
if(horiz){
polygon(poly[[i]], c(0,0,1,1), col=col[i], border=NA)
}
if(!horiz){
polygon(c(0,0,1,1), poly[[i]], col=col[i], border=NA)
}
}
}
image.scale(back_rst)
back_rst
plot(back_rst, col = terrain.colors())
plot(back_rst, col = terrain.colors(12))
plot(back_rst, asp = 1, ylim = c(0, 0.09))
plot(NULL, xlim = c(0,45), ylim = c(0, 0.085))
plot(back_rst, asp = 1, ylim = c(0, 0.09), add = T)
plot(NULL, xlim = c(0,45), ylim = c(0, 0.085), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, ylim = c(0, 0.09), add = T)
plot(NULL, xlim = c(0,45), ylim = c(0.02, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.02, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T)
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T)
plot(back_rst, asp = 1, add = T, legend = "bottomright")
plot(back_rst, asp = 1, add = T,col=topo.colors(100))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args=list(text='CO2 (ppm)', side=2, line=-2.5, cex=1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args=list(text='CO2 (ppm)', side=3, line=-2.5, cex=1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args=list(text='CO2 (ppm)', side=2, line=-2.5, cex=1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args=list(text='CO2 (ppm)', side=2, line=2.5, cex=1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args=list(text='CO2 (ppm)', side=3, line=2.5, cex=1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args = list("bottomright", text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args = list(pos = "bottomright", text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args = list(x = 5, y = 0.05, text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
plot(back_rst, asp = 1, add = T,col=grey.colors(100), legend.args = list(legend.x = 5, legend.y = 0.05, text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
pdf(file = "collatz_plot.pdf", width = 4, height = 4, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
tmps <- seq(from = 0, to = 45, length.out = 100)
lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 200, Temperature = tmps) ~ tmps)
box()
dev.off()
warnings()
getwd()
lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
pdf(file = "collatz_plot.pdf", width = 4, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
tmps <- seq(from = 0, to = 45, length.out = 100)
lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
setwd("D:/R_PACKAGE_DEVELOPMENT/r3PG")
pdf(file = "collatz_plot.pdf", width = 4, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
tmps <- seq(from = 0, to = 45, length.out = 100)
lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend.args = list(y.leg = 0.05, x.leg = 5, text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
plot(back_rst, legend.only = TRUE, col = grey.colors(100), legend.width = 1, legend.shrink = 0.75, smallplot = c(0,.09, .3,.75)); par(mar = par("mar"))
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend = FALSE)
warnings()
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend = FALSE)
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = grey.colors(100), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.2,.09, .3,.75)); par(mar = par("mar"), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
plot(back_rst, legend.only = TRUE, col = grey.colors(100), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.2, 0.3, 0.3, 0.75)); par(mar = par("mar"), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1))
plot(back_rst, legend.only = TRUE, col = grey.colors(100), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.2, 0.3, 0.3, 0.75), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1)); par(mar = par("mar"))
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = grey.colors(100), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = grey.colors(100), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.2, 0.3, 0.3, 0.75), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1)); par(mar = par("mar"))
plot(back_rst, legend.only = TRUE, col = grey.colors(100), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.2, 0.25, 0.2, 0.6), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1)); par(mar = par("mar"))
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.2, 0.25, 0.2, 0.6), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1)); par(mar = par("mar"))
tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.25, 0.29, 0.3, 0.5), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 1, cex = 1)); par(mar = par("mar"))
#tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 0, cex = 1)); par(mar = par("mar"))
#tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = "Temperature (C)", ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = 'CO2 (ppm)', side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
#tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(Temperature (~degree~C)), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(Temperature (~degreeC)), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(Temperature (~degree~~C)), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(Temperature~(~degree~~C)), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(Temperature~(~degree~C)), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",~degree~C, sep = ""))), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",~degree~C, sep = "")), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",degree,C, sep = "")), ylab = "Effective Quatum Yield (mol/mol)")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",degree,C,")", sep = "")), ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste("CO",{2}," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste("CO",[2]," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste("CO",2," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste(CO[2]," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",degree,C,")", sep = "")), ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste(CO[2]," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
#tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",degree,C,")", sep = "")), ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste(CO[2]," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
#tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
pdf(file = "collatz_plot.pdf", width = 4.5, height = 5, paper = "a4")
plot(NULL, xlim = c(0,45), ylim = c(0.01, 0.07), xlab = expression(paste("Temperature (",degree,C,")", sep = "")), ylab = "Effective Quatum Yield (mol/mol)")
plot(back_rst, asp = 1, add = T, col = rev(grey.colors(100)), legend = FALSE)
r.range <- c(minValue(back_rst), maxValue(back_rst))
plot(back_rst, legend.only = TRUE, col = rev(grey.colors(100)), legend.width = 1, legend.shrink = 0.75, smallplot = c(0.29, 0.33, 0.25, 0.5), legend.args = list(text = expression(paste(CO[2]," (ppm)", sep = "")), side = 3, line = 0.5, cex = 1)); par(mar = par("mar"))
#tmps <- seq(from = 0, to = 45, length.out = 100)
#lines(col = "green", lwd = 2, calc_modifier_co2(alpha = 0.085, CO2 = 280, Temperature = tmps) ~ tmps)
box()
dev.off()
config
cfg <- load_config("test_data/griffith_test_cfg_c4_grass.cfg") # code so that checks if list nd then can pass list.
config <- cfg
############################################################################
#
# Author: Daniel M. Griffith
# Date:
# Description:
############################################################################
library(devtools)
install_github(repo = "griffithdan/r3PG")
library(r3PG)
library(reshape2)
library(raster)
test <- run_3pg(config = cfg, climate = "test_data/Test_EO_in.txt", output = "test_tmp.txt", grass = TRUE)
plot(y = test$NPP[-1], x = 1:length(test$NPP[-1]), lwd = 1, ty ="l")
plot(y = test$NPP[-1], x = test$PAR[-1], lwd = 1, ty ="l")
test1 <- test
test <- run_3pg(config = cfg, climate = "test_data/Test_EO_in.txt", output = "test_tmp.txt", grass = FALSE)
plot(y = test$NPP[-1], x = 1:length(test$NPP[-1]), lwd = 1, ty ="l")
plot(y = test$NPP[-1], x = test$PAR[-1], lwd = 1, ty ="l")
plot(y = test1$NPP[-1], x = test$NPP[-1], lwd = 1, ty ="l")
